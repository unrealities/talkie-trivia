import { StyleSheet } from "react-native"
import { responsive, spacing, shadows, getTypography } from "./global"

export const getPickerStyles = (colors: any) => {
  const typography = getTypography(colors)
  return StyleSheet.create({
    activityIndicator: {
      position: "absolute",
      right: spacing.small,
      top: responsive.scale(12),
    },
    container: {
      width: "100%",
      marginTop: spacing.medium,
      marginBottom: spacing.medium,
    },
    errorText: {
      color: colors.error,
      fontFamily: "Arvo-Regular",
      fontSize: responsive.responsiveFontSize(14),
      padding: spacing.medium,
      textAlign: "center",
    },
    input: {
      flex: 1,
      borderColor: colors.border,
      borderRadius: responsive.scale(8),
      borderWidth: 2,
      backgroundColor: colors.surface,
      color: colors.textPrimary,
      fontFamily: "Arvo-Regular",
      fontSize: responsive.responsiveFontSize(14),
      paddingHorizontal: spacing.medium,
      paddingVertical: responsive.scale(12),
      textAlign: "left",
      paddingRight: responsive.scale(40),
    },
    inputContainer: {
      flexDirection: "row",
      position: "relative",
      width: "100%",
    },
    clearButton: {
      position: "absolute",
      right: responsive.scale(10),
      top: 0,
      bottom: 0,
      justifyContent: "center",
      alignItems: "center",
      padding: spacing.small,
      zIndex: 2,
    },
    noResultsText: {
      color: colors.textSecondary,
      fontFamily: "Arvo-Regular",
      fontSize: responsive.responsiveFontSize(14),
      padding: spacing.medium,
      textAlign: "center",
    },
    resultsContainer: {
      position: "absolute",
      top: responsive.scale(55),
      left: 0,
      right: 0,
      maxHeight: responsive.scale(200),
      backgroundColor: colors.backgroundLight,
      borderColor: colors.border,
      borderWidth: 1,
      borderRadius: responsive.scale(8),
      ...shadows.medium,
      zIndex: 10,
    },
    resultsShow: {
      flex: 1,
    },
    resultItem: {
      paddingVertical: spacing.small,
      paddingHorizontal: spacing.medium,
      borderBottomWidth: 1,
      borderBottomColor: colors.border,
      overflow: "hidden",
    },
    resultItemContent: {
      flexDirection: "row",
      alignItems: "center",
    },
    resultImage: {
      width: responsive.scale(30),
      height: responsive.scale(45),
      borderRadius: responsive.scale(4),
      marginRight: spacing.medium,
      backgroundColor: colors.surface,
    },
    unselected: {
      color: colors.textSecondary,
      fontFamily: "Arvo-Regular",
      fontSize: responsive.responsiveFontSize(14),
      flex: 1,
    },
    expandedPreview: {
      flexDirection: "row",
      alignItems: "center",
      marginTop: spacing.medium,
      padding: spacing.small,
      backgroundColor: colors.surface,
      borderRadius: responsive.scale(8),
    },
    expandedImage: {
      width: responsive.scale(80),
      height: responsive.scale(120),
      borderRadius: responsive.scale(6),
      marginRight: spacing.medium,
    },
    expandedInfo: {
      flex: 1,
      height: "100%",
      justifyContent: "center",
    },
    expandedTitle: {
      ...typography.bodyText,
      color: colors.textPrimary,
      fontFamily: "Arvo-Bold",
      fontSize: responsive.responsiveFontSize(16),
      marginBottom: spacing.extraSmall,
    },
    expandedYear: {
      ...typography.caption,
      color: colors.textSecondary,
      marginBottom: spacing.small,
    },
    expandedHint: {
      ...typography.caption,
      color: colors.primary,
      fontFamily: "Arvo-Italic",
    },
    previewHintContainer: {
      position: "absolute",
      bottom: spacing.small,
      right: spacing.small,
      backgroundColor: colors.tertiary,
      borderRadius: responsive.scale(12),
      paddingVertical: responsive.scale(4),
      paddingHorizontal: spacing.small,
      zIndex: 1,
      elevation: 1,
    },
    previewHintText: {
      fontFamily: "Arvo-Italic",
      fontSize: responsive.responsiveFontSize(11),
      color: colors.background,
    },
    disabledButton: {
      backgroundColor: colors.surface,
      opacity: 0.6,
    },
  })
}
